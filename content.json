{"meta":{"title":"幻墨如烟","subtitle":null,"description":null,"author":"冰雪奇缘","url":"http://www.tybxqy.online"},"pages":[{"title":"","date":"2017-05-27T11:58:06.444Z","updated":"2017-05-27T11:58:06.444Z","comments":false,"path":"about/index.html","permalink":"http://www.tybxqy.online/about/index.html","excerpt":"","text":""},{"title":"","date":"2017-05-13T12:48:25.279Z","updated":"2017-05-10T13:50:01.640Z","comments":false,"path":"categories/index.html","permalink":"http://www.tybxqy.online/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-05-13T12:48:25.295Z","updated":"2017-05-10T13:49:57.925Z","comments":false,"path":"tags/index.html","permalink":"http://www.tybxqy.online/tags/index.html","excerpt":"","text":""},{"title":"pageName","date":"2017-05-10T14:09:26.000Z","updated":"2017-05-10T14:09:26.779Z","comments":true,"path":"pageName/index.html","permalink":"http://www.tybxqy.online/pageName/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2017-05-13T12:48:25.303Z","updated":"2017-05-09T11:45:14.555Z","comments":true,"path":"2017/05/13/hello-world/","link":"","permalink":"http://www.tybxqy.online/2017/05/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"使用Vue搭建Vue-webpack项目","slug":"使用Vue搭建Vue-webpack项目","date":"2017-05-09T13:51:43.000Z","updated":"2017-05-13T13:09:59.226Z","comments":true,"path":"2017/05/09/使用Vue搭建Vue-webpack项目/","link":"","permalink":"http://www.tybxqy.online/2017/05/09/使用Vue搭建Vue-webpack项目/","excerpt":"","text":"前言对于Vue.js来说，如果你想要快速开始，那么只需要在你的html中引入一个&lt;script&gt;标签,加上CDN的地址即可。但是，这并不算是一个完整的vue实际应用。在实际应用中，我们必须要一系列的工具，包括：模块化，转译，预处理，热加载，静态检测和自动化测试等。对于一个需要长期维护和大型的项目而言，这些工具是必不可少的，但是尝试配置初始化这些很痛苦.这就是我们发布vue官方提供的脚手架工具的原因，一个简单的构建工具，通过几个默认的步骤帮助你快速的构建Vue.js项目。 安装node环境 windows下推荐安装git bash node环境 第一步检测是否安装node；没有安装node的同学请到官网下载安装成功后在命令行查看node版本，如果有说明安装成功。 安装vue工具vue-cli 大家在安装node的时候，会自动安装npm； vue工具 可以先行查看npm版本；使用npm安装vue-cli： 1npm install vue-cli -g 准备工作已经完毕，下面直接使用vue-cli初始化webpack项目； vue init webpack yourprojectname(项目名) 初始化webpack 一路回车可以看到我们刚才创建的webpack项目已经建好了 安装依赖1$ npm install 国内有些包npm无法安装，可以使用cnpm安装(较快) 1$ cnpm install 5.启动本地开发 1$ http-server","categories":[{"name":"Vue","slug":"Vue","permalink":"http://www.tybxqy.online/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://www.tybxqy.online/tags/Vue/"}]},{"title":"JavaScript面向对象编程—this详解","slug":"JavaScript面向对象编程—this详解","date":"2017-05-09T13:11:18.000Z","updated":"2017-05-11T09:18:43.647Z","comments":true,"path":"2017/05/09/JavaScript面向对象编程—this详解/","link":"","permalink":"http://www.tybxqy.online/2017/05/09/JavaScript面向对象编程—this详解/","excerpt":"","text":"前言在JavaScriptOPPt面向对象编程中，this这位老大哥，相信大家不会陌生。大家在遇到this时，很多朋友难免会有个疑问：“这个this是什么，它到底指向谁？”今天，针对this的指向问题，进行了整理。本篇博客，博主给大家详尽介绍了不同情况下，this的指向！！以下奉上博主总结的关于this的指向详解，希望对各位开发者朋友有所帮助： 1、谁最终调用函数，this指向谁。 this指向的，永远只可能是对象！！！！！ this指向谁，永远不取决于this写在哪，而是取决于this在哪调用； this指向的对象，我们称之为函数的上下文context，也叫函数的调用者 2、this指向的规律(与函数调用的方式息息相关this指向的情况，取决于函数调用的方式有哪些： 通过函数名()直接调用的：this指向window 通过对象.函数名()调用的：this指向这个对象； 函数作为数组的一个元素，通过数组下标调用的：this指向这个数组 函数作为window内置函数的回调函数调用时：this指向windowsetTimeout(func,1000);setInterval等 函数作为构造函数，用new关键字调用时：this指向的是new出的新对象 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\" /&gt;&lt;title&gt;this详解&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"div\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;script type=\"text/javascript\"&gt;function func (name) &#123;console.log(this);&#125;func();//window//狭义对象var obj=&#123;name:\"obj\",func1:func&#125;;obj.func1();//obj//广义对象document.getElementById(\"div\").onclick=function () &#123;this.style.backgroundColor=\"red\";&#125;;//this指向div //函数作为数组的一个元素，通过数组下标调用的：this指向这个数组var arr=[func,1,2,3]arr[0]();//函数作为window内置函数的回调函数调用时：this指向windowsetTimeout(func,1000);//setInterval等//函数作为构造函数，用new关键字调用时：this指向的是new出的新对象var obj=new func;//this指向的是new出的新obj/** 综合小练习*/var obj1=&#123;name:\"obj1\",arr:[setTimeout(func,5000),1,2,3]&#125;document.getElementById(\"div\").onclick=obj1.arr[0]();//函数最终调用者：setTimeout；符合规律⑤，this指向windowvar obj1=&#123;name:\"obj1\",arr:[func,1,2,3]&#125;document.getElementById(\"div\").onclick=obj1.arr[0]();//函数最终调用者：arr数组下标；符合规律③，this指向arrvar obj1=&#123;name:\"obj1\",arr:[&#123;name:'arrObj',fun:func&#125;,1,2,3]&#125;document.getElementById(\"div\").onclick=obj1.arr[0].fun();//函数最终调用者：对象；符合规律②，this指向&#123;name:'arrObj',fun:func&#125;这个对象&lt;/script&gt;&lt;/html&gt;","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.tybxqy.online/tags/JavaScript/"}]},{"title":"display的值及作用","slug":"display的值及作用","date":"2017-05-09T11:58:06.000Z","updated":"2017-05-11T09:18:50.192Z","comments":true,"path":"2017/05/09/display的值及作用/","link":"","permalink":"http://www.tybxqy.online/2017/05/09/display的值及作用/","excerpt":"","text":"display的值,及他们的作用分别是？ block 象块类型元素一样显示。 none 缺省值。象行内元素类型一样显示。 inline-block 象行内元素一样显示，但其内容象块类型元素一样显示。 list-item 象块类型元素一样显示，并添加样式列表标记。 table 此元素会作为块级表格来显示 inherit 规定应该从父元素继承 display 属性的值","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://www.tybxqy.online/tags/css/"}]},{"title":"盒子模型","slug":"盒子模型","date":"2017-05-09T11:43:45.000Z","updated":"2017-05-13T13:09:54.929Z","comments":true,"path":"2017/05/09/盒子模型/","link":"","permalink":"http://www.tybxqy.online/2017/05/09/盒子模型/","excerpt":"","text":"盒子模型在网页中，一个元素占有空间的大小由几个部分构成，其中包括元素的内容（content），元素的内边距（padding），元素的边框（border），元素的外边距（margin）四个部分。这四个部分占有的空间中，有的部分可以显示相应的内容，而有的部分只用来分隔相邻的区域或区域。4个部分一起构成了css中元素的盒模型。 盒子模型","categories":[{"name":"css","slug":"css","permalink":"http://www.tybxqy.online/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"http://www.tybxqy.online/tags/css/"}]},{"title":"My New Post","slug":"My-New-Post","date":"2017-05-09T11:10:38.000Z","updated":"2017-05-09T11:10:38.484Z","comments":true,"path":"2017/05/09/My-New-Post/","link":"","permalink":"http://www.tybxqy.online/2017/05/09/My-New-Post/","excerpt":"","text":"","categories":[],"tags":[]}]}